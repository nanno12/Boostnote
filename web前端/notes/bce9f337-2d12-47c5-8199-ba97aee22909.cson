createdAt: "2019-08-29T03:36:48.407Z"
updatedAt: "2019-08-29T03:44:20.100Z"
type: "MARKDOWN_NOTE"
folder: "f376965e603f38f2c59c"
title: "export default 和 export 区别 2019/8/29"
tags: [
  "export_default_和_export_区别"
]
content: '''
  ### export default 和 export 区别 2019/8/29
  ###### 作用：导出常量、函数、文件、模块等
  ###### 区别：
  	1.export default与export语法差异。
  	2.在一个文件或模块中，export、import可以有多个，export default仅有一个
  	3.通过export方式导出，在导入时要加{ }，export default则不需要
  	4.模块中通过export 导出的(属性或者方法)可以修改，但是通过export default导出的不可以修改
  	5.
  ### 
  	1.export
  	//a.js
  	export const str = "blablabla~";
  	export function log(sth) { 
  			return sth;
  	}
  	对应的导入方式：
  	//b.js
  	import { str, log } from 'a'; //也可以分开写两次，导入的时候带花括号
  
  	2.export default
  	//a.js
  	const str = "blablabla~";
  	export default str;
  	对应的导入方式：
  
  	//b.js
  	import str from 'a'; //导入的时候没有花括号
  ###### 使用export default命令，为模块指定默认输出，这样就不需要知道所要加载模块的变量名
  	//a.js
  	let sex = "boy";
  	export default sex（sex不能加大括号）
  	//原本直接export sex外部是无法识别的，加上default就可以了.但是一个文件内最多只能有一个export default。
  	其实此处相当于为sex变量值"boy"起了一个系统默认的变量名default，自然default只能有一个值，所以一个文件内不能有多个export default。
  	// b.js
  	本质上，a.js文件的export default输出一个叫做default的变量，然后系统允许你为它取任意名字。所以可以为import的模块起任何变量名，且不需要用大括号包含
  	import any from "./a.js"
  	import any12 from "./a.js" 
  	console.log(any,any12)   // boy,boy
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
