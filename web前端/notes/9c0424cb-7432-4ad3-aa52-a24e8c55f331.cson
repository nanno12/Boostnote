createdAt: "2019-08-29T12:49:51.919Z"
updatedAt: "2019-08-29T13:13:19.090Z"
type: "MARKDOWN_NOTE"
folder: "6b35ebf9856419e181f3"
title: "深浅拷贝 2019/8/29"
tags: [
  "深浅拷贝"
]
content: '''
  ### 深浅拷贝 2019/8/29
  	1.深拷贝和浅拷贝只针对像Object, Array这样的引用类型数据。
  	2.浅拷贝是对对象引用地址进行拷贝，并没有开辟新的栈，也就是拷贝后的结果是两个对象指向同一个引用地址，修改其中一个对象的属性，则另一个对象的属性也会改变。
  	3.深拷贝则是开启一个新的栈，两个对象对应两个不同的引用地址，修改一个对象的属性，不会改变另一个对象的属性。
  
  #### 浅拷贝
  	var m = { a: 10, b: 20 }
  	var n = m;
  	n.a = 15;
  	// 这时m.a的值是多少
  m.a会输出15，因为这是浅拷贝，n和m指向的是同一个堆，对象复制只是复制的对象的引用。
  #### 深拷贝
  	var m = { a: 10, b: 20 }
  	var n = {a:m.a,b:m.b};
  	n.a = 15;
  这次，我们再来输出m.a ，发现m.a的值还是10,并没有改变，m对象和n对象是虽然所有的值都是一样的，但是在堆里面，对应的不是同一个了，这个就是深拷贝
  
  1.可以通过简单的赋值实现
  ![4a5c349f.png](:storage/9c0424cb-7432-4ad3-aa52-a24e8c55f331/4a5c349f.png)
'''
linesHighlighted: [
  0
]
isStarred: false
isTrashed: false
